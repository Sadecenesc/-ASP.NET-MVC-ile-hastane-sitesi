// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hastane1.Models;

#nullable disable

namespace hastane1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("hastane1.Models.AcilDurumHaberi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EkipEpostalari")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AcilDurumHaberleri");
                });

            modelBuilder.Entity("hastane1.Models.Asistan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BolumId")
                        .HasColumnType("int");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NobetBilgisi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UzmanlikBolgesi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BolumId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Asistanlar");
                });

            modelBuilder.Entity("hastane1.Models.Bolum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklamalar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BolumAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("BosYatakSayisi")
                        .HasColumnType("int");

                    b.Property<int?>("HastaSayisi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bolumler");
                });

            modelBuilder.Entity("hastane1.Models.BolumHakkinda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Misyon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OzelNotlar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tarihce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vizyon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BolumHakkinda");
                });

            modelBuilder.Entity("hastane1.Models.Nobet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AsistanId")
                        .HasColumnType("int");

                    b.Property<int?>("BolumId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Saat")
                        .HasColumnType("time");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AsistanId");

                    b.HasIndex("BolumId");

                    b.ToTable("Nobetler");
                });

            modelBuilder.Entity("hastane1.Models.OgretimUyesi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SorumluBolumId")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SorumluBolumId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("OgretimUyeleri");
                });

            modelBuilder.Entity("hastane1.Models.Randevu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AsistanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Başlamazamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Bitişzamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GorusmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OgretimUyesiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AsistanId");

                    b.HasIndex("OgretimUyesiId");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("hastane1.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("hastane1.Models.Asistan", b =>
                {
                    b.HasOne("hastane1.Models.Bolum", "Bolum")
                        .WithMany("Asistanlar")
                        .HasForeignKey("BolumId");

                    b.HasOne("hastane1.Models.User", "User")
                        .WithOne("Asistan")
                        .HasForeignKey("hastane1.Models.Asistan", "UserId");

                    b.Navigation("Bolum");

                    b.Navigation("User");
                });

            modelBuilder.Entity("hastane1.Models.Nobet", b =>
                {
                    b.HasOne("hastane1.Models.Asistan", "Asistan")
                        .WithMany("Nobetler")
                        .HasForeignKey("AsistanId");

                    b.HasOne("hastane1.Models.Bolum", "Bolum")
                        .WithMany("Nobetler")
                        .HasForeignKey("BolumId");

                    b.Navigation("Asistan");

                    b.Navigation("Bolum");
                });

            modelBuilder.Entity("hastane1.Models.OgretimUyesi", b =>
                {
                    b.HasOne("hastane1.Models.Bolum", "Bolum")
                        .WithMany("OgretimUyeleri")
                        .HasForeignKey("SorumluBolumId");

                    b.HasOne("hastane1.Models.User", "User")
                        .WithOne("OgretimUyesi")
                        .HasForeignKey("hastane1.Models.OgretimUyesi", "UserId");

                    b.Navigation("Bolum");

                    b.Navigation("User");
                });

            modelBuilder.Entity("hastane1.Models.Randevu", b =>
                {
                    b.HasOne("hastane1.Models.Asistan", "Asistan")
                        .WithMany("Randevular")
                        .HasForeignKey("AsistanId");

                    b.HasOne("hastane1.Models.OgretimUyesi", "OgretimUyesi")
                        .WithMany("Randevular")
                        .HasForeignKey("OgretimUyesiId");

                    b.Navigation("Asistan");

                    b.Navigation("OgretimUyesi");
                });

            modelBuilder.Entity("hastane1.Models.Asistan", b =>
                {
                    b.Navigation("Nobetler");

                    b.Navigation("Randevular");
                });

            modelBuilder.Entity("hastane1.Models.Bolum", b =>
                {
                    b.Navigation("Asistanlar");

                    b.Navigation("Nobetler");

                    b.Navigation("OgretimUyeleri");
                });

            modelBuilder.Entity("hastane1.Models.OgretimUyesi", b =>
                {
                    b.Navigation("Randevular");
                });

            modelBuilder.Entity("hastane1.Models.User", b =>
                {
                    b.Navigation("Asistan");

                    b.Navigation("OgretimUyesi");
                });
#pragma warning restore 612, 618
        }
    }
}
